{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\bhard\\\\OneDrive\\\\Desktop\\\\CRMSales\\\\SalesCRM\\\\frontend\\\\src\\\\components\\\\Leads\\\\Display.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport LeadDetails from \"./LeadDetails\";\nimport \"./Display.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Display = () => {\n  _s();\n  const [leads, setLeads] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [selectedLead, setSelectedLead] = useState(null);\n  const handleLeadClick = leadNumber => {\n    setSelectedLead(leadNumber);\n  };\n  const handleCloseDetails = () => {\n    setSelectedLead(null);\n  };\n  useEffect(() => {\n    const fetchLeads = async () => {\n      try {\n        const response = await axios.get(\"http://localhost:8080/api/leads\");\n        if (response.data && Array.isArray(response.data)) {\n          console.log(\"Fetched leads:\", response.data);\n          setLeads(response.data);\n        } else {\n          throw new Error(\"Invalid data format received from server\");\n        }\n      } catch (err) {\n        var _err$response, _err$response$data;\n        setError(((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.error) || err.message || \"An unknown error occurred\");\n        console.error(\"Error details:\", err);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchLeads();\n  }, []);\n\n  // Helper function to get company name\n  const getCompanyName = lead => {\n    if (lead.companyInfo && lead.companyInfo[\"Company Name\"]) {\n      return lead.companyInfo[\"Company Name\"];\n    }\n    return \"N/A\";\n  };\n\n  // Helper function to get description\n  const getDescription = lead => {\n    if (lead.descriptionSection && lead.descriptionSection.description) {\n      return lead.descriptionSection.description;\n    }\n    return \"N/A\";\n  };\n  if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [\"Error: \", error]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 21\n  }, this);\n  if (leads.length === 0) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"No leads found\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 34\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Recent Leads\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Lead Number\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Company Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"IT Contact\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"ERP System\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Description\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: leads.map(lead => {\n          var _lead$contactInfo, _lead$contactInfo$it, _lead$contactInfo2, _lead$contactInfo2$it, _lead$itLandscape, _lead$itLandscape$net;\n          return /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => handleLeadClick(lead.leadNumber),\n                children: lead.leadNumber || \"N/A\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 83,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: getCompanyName(lead)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: [((_lead$contactInfo = lead.contactInfo) === null || _lead$contactInfo === void 0 ? void 0 : (_lead$contactInfo$it = _lead$contactInfo.it) === null || _lead$contactInfo$it === void 0 ? void 0 : _lead$contactInfo$it.name) || \"N/A\", \" (\", ((_lead$contactInfo2 = lead.contactInfo) === null || _lead$contactInfo2 === void 0 ? void 0 : (_lead$contactInfo2$it = _lead$contactInfo2.it) === null || _lead$contactInfo2$it === void 0 ? void 0 : _lead$contactInfo2$it.email) || \"N/A\", \")\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: ((_lead$itLandscape = lead.itLandscape) === null || _lead$itLandscape === void 0 ? void 0 : (_lead$itLandscape$net = _lead$itLandscape.netNew) === null || _lead$itLandscape$net === void 0 ? void 0 : _lead$itLandscape$net[\"Using ERP (y/n)\"]) || \"N/A\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: getDescription(lead)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 15\n            }, this)]\n          }, lead._id || lead.leadNumber, true, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 13\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), selectedLead && /*#__PURE__*/_jsxDEV(LeadDetails, {\n      leadNumber: selectedLead,\n      onClose: handleCloseDetails\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n};\n_s(Display, \"o7zu5J6Ierfay/qRU8qUnJ6pXDY=\");\n_c = Display;\nexport default Display;\nvar _c;\n$RefreshReg$(_c, \"Display\");","map":{"version":3,"names":["React","useState","useEffect","axios","LeadDetails","jsxDEV","_jsxDEV","Display","_s","leads","setLeads","loading","setLoading","error","setError","selectedLead","setSelectedLead","handleLeadClick","leadNumber","handleCloseDetails","fetchLeads","response","get","data","Array","isArray","console","log","Error","err","_err$response","_err$response$data","message","getCompanyName","lead","companyInfo","getDescription","descriptionSection","description","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","_lead$contactInfo","_lead$contactInfo$it","_lead$contactInfo2","_lead$contactInfo2$it","_lead$itLandscape","_lead$itLandscape$net","onClick","contactInfo","it","name","email","itLandscape","netNew","_id","onClose","_c","$RefreshReg$"],"sources":["C:/Users/bhard/OneDrive/Desktop/CRMSales/SalesCRM/frontend/src/components/Leads/Display.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport LeadDetails from \"./LeadDetails\";\r\nimport \"./Display.css\"\r\n\r\nconst Display = () => {\r\n  const [leads, setLeads] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n   const [selectedLead, setSelectedLead] = useState(null);\r\n\r\n     const handleLeadClick = (leadNumber) => {\r\n       setSelectedLead(leadNumber);\r\n     };\r\n\r\n     const handleCloseDetails = () => {\r\n       setSelectedLead(null);\r\n     };\r\n\r\n\r\n  useEffect(() => {\r\n    const fetchLeads = async () => {\r\n      try {\r\n        const response = await axios.get(\"http://localhost:8080/api/leads\");\r\n        if (response.data && Array.isArray(response.data)) {\r\n          console.log(\"Fetched leads:\", response.data);\r\n          setLeads(response.data);\r\n        } else {\r\n          throw new Error(\"Invalid data format received from server\");\r\n        }\r\n      } catch (err) {\r\n        setError(\r\n          err.response?.data?.error ||\r\n            err.message ||\r\n            \"An unknown error occurred\"\r\n        );\r\n        console.error(\"Error details:\", err);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchLeads();\r\n  }, []);\r\n\r\n  // Helper function to get company name\r\n  const getCompanyName = (lead) => {\r\n    if (lead.companyInfo && lead.companyInfo[\"Company Name\"]) {\r\n      return lead.companyInfo[\"Company Name\"];\r\n    }\r\n    return \"N/A\";\r\n  };\r\n\r\n  // Helper function to get description\r\n  const getDescription = (lead) => {\r\n    if (lead.descriptionSection && lead.descriptionSection.description) {\r\n      return lead.descriptionSection.description;\r\n    }\r\n    return \"N/A\";\r\n  };\r\n\r\n  if (loading) return <div>Loading...</div>;\r\n  if (error) return <div>Error: {error}</div>;\r\n  if (leads.length === 0) return <div>No leads found</div>;\r\n\r\n  return (\r\n    <div>\r\n      <h2>Recent Leads</h2>\r\n      <table>\r\n        <thead>\r\n          <tr>\r\n            <th>Lead Number</th>\r\n            <th>Company Name</th>\r\n            <th>IT Contact</th>\r\n            <th>ERP System</th>\r\n            <th>Description</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {leads.map((lead) => (\r\n            <tr key={lead._id || lead.leadNumber}>\r\n              <td>\r\n                <button onClick={() => handleLeadClick(lead.leadNumber)}>\r\n                  {lead.leadNumber || \"N/A\"}\r\n                </button>\r\n              </td>\r\n              <td>{getCompanyName(lead)}</td>\r\n              <td>\r\n                {lead.contactInfo?.it?.name || \"N/A\"} (\r\n                {lead.contactInfo?.it?.email || \"N/A\"})\r\n              </td>\r\n              <td>{lead.itLandscape?.netNew?.[\"Using ERP (y/n)\"] || \"N/A\"}</td>\r\n              <td>{getDescription(lead)}</td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n\r\n      {selectedLead && (\r\n        <LeadDetails leadNumber={selectedLead} onClose={handleCloseDetails} />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Display;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}