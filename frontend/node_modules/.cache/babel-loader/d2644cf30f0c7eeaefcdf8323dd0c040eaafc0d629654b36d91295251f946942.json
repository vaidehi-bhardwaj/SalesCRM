{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\bhard\\\\OneDrive\\\\Desktop\\\\sales\\\\progress\\\\frontend\\\\src\\\\components\\\\Header\\\\Dropdown.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Dropdown({\n  name,\n  items,\n  isOpen,\n  toggleDropdown\n}) {\n  _s();\n  const navigate = useNavigate();\n  const handleClick = item => {\n    let path = \"\";\n    switch (item) {\n      case \"Create Leads\":\n        path = \"/leads\";\n        break;\n      case \"Item 2\":\n      case \"Item 3\":\n        path = \"/lead\";\n        break;\n      case \"Item A\":\n      case \"Item B\":\n      case \"Item C\":\n        path = \"/lead-details\";\n        break;\n      case \"Option X\":\n      case \"Option Y\":\n      case \"Option Z\":\n        path = \"/bi\";\n        break;\n      case \"Change Password\":\n        path = \"/reset-password/:token\";\n        break;\n      default:\n        break;\n    }\n    navigate(path);\n    toggleDropdown(null); // Close dropdown after navigation\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `dropdown ${isOpen ? \"open\" : \"\"}`,\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: toggleDropdown,\n      children: [name, \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"dropdown-arrow\",\n        children: \"\\u25BE\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 16\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), isOpen && /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"dropdown-menu\",\n      children: items.map((item, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        onClick: () => handleClick(item),\n        children: item\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n}\n_s(Dropdown, \"CzcTeTziyjMsSrAVmHuCCb6+Bfg=\", false, function () {\n  return [useNavigate];\n});\n_c = Dropdown;\nexport default Dropdown;\nvar _c;\n$RefreshReg$(_c, \"Dropdown\");","map":{"version":3,"names":["React","useNavigate","jsxDEV","_jsxDEV","Dropdown","name","items","isOpen","toggleDropdown","_s","navigate","handleClick","item","path","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","map","index","_c","$RefreshReg$"],"sources":["C:/Users/bhard/OneDrive/Desktop/sales/progress/frontend/src/components/Header/Dropdown.js"],"sourcesContent":["import React from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nfunction Dropdown({ name, items, isOpen, toggleDropdown }) {\r\n  const navigate = useNavigate();\r\n\r\n  const handleClick = (item) => {\r\n    let path = \"\";\r\n    switch (item) {\r\n      case \"Create Leads\":\r\n        path = \"/leads\";\r\n        break;\r\n      case \"Item 2\":\r\n      case \"Item 3\":\r\n        path = \"/lead\";\r\n        break;\r\n      case \"Item A\":\r\n      case \"Item B\":\r\n      case \"Item C\":\r\n        path = \"/lead-details\";\r\n        break;\r\n      case \"Option X\":\r\n      case \"Option Y\":\r\n      case \"Option Z\":\r\n        path = \"/bi\";\r\n        break;\r\n      case \"Change Password\":\r\n        path = \"/reset-password/:token\";\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n    navigate(path);\r\n    toggleDropdown(null); // Close dropdown after navigation\r\n  };\r\n\r\n  return (\r\n    <div className={`dropdown ${isOpen ? \"open\" : \"\"}`}>\r\n      <button onClick={toggleDropdown}>\r\n        {name} <span className=\"dropdown-arrow\">&#9662;</span>\r\n      </button>\r\n      {isOpen && (\r\n        <ul className=\"dropdown-menu\">\r\n          {items.map((item, index) => (\r\n            <li key={index} onClick={() => handleClick(item)}>\r\n              {item}\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Dropdown;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,WAAW,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/C,SAASC,QAAQA,CAAC;EAAEC,IAAI;EAAEC,KAAK;EAAEC,MAAM;EAAEC;AAAe,CAAC,EAAE;EAAAC,EAAA;EACzD,MAAMC,QAAQ,GAAGT,WAAW,CAAC,CAAC;EAE9B,MAAMU,WAAW,GAAIC,IAAI,IAAK;IAC5B,IAAIC,IAAI,GAAG,EAAE;IACb,QAAQD,IAAI;MACV,KAAK,cAAc;QACjBC,IAAI,GAAG,QAAQ;QACf;MACF,KAAK,QAAQ;MACb,KAAK,QAAQ;QACXA,IAAI,GAAG,OAAO;QACd;MACF,KAAK,QAAQ;MACb,KAAK,QAAQ;MACb,KAAK,QAAQ;QACXA,IAAI,GAAG,eAAe;QACtB;MACF,KAAK,UAAU;MACf,KAAK,UAAU;MACf,KAAK,UAAU;QACbA,IAAI,GAAG,KAAK;QACZ;MACF,KAAK,iBAAiB;QACpBA,IAAI,GAAG,wBAAwB;QAC/B;MACF;QACE;IACJ;IACAH,QAAQ,CAACG,IAAI,CAAC;IACdL,cAAc,CAAC,IAAI,CAAC,CAAC,CAAC;EACxB,CAAC;EAED,oBACEL,OAAA;IAAKW,SAAS,EAAE,YAAYP,MAAM,GAAG,MAAM,GAAG,EAAE,EAAG;IAAAQ,QAAA,gBACjDZ,OAAA;MAAQa,OAAO,EAAER,cAAe;MAAAO,QAAA,GAC7BV,IAAI,EAAC,GAAC,eAAAF,OAAA;QAAMW,SAAS,EAAC,gBAAgB;QAAAC,QAAA,EAAC;MAAO;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChD,CAAC,EACRb,MAAM,iBACLJ,OAAA;MAAIW,SAAS,EAAC,eAAe;MAAAC,QAAA,EAC1BT,KAAK,CAACe,GAAG,CAAC,CAACT,IAAI,EAAEU,KAAK,kBACrBnB,OAAA;QAAgBa,OAAO,EAAEA,CAAA,KAAML,WAAW,CAACC,IAAI,CAAE;QAAAG,QAAA,EAC9CH;MAAI,GADEU,KAAK;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEV,CACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CACL;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV;AAACX,EAAA,CAjDQL,QAAQ;EAAA,QACEH,WAAW;AAAA;AAAAsB,EAAA,GADrBnB,QAAQ;AAmDjB,eAAeA,QAAQ;AAAC,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}